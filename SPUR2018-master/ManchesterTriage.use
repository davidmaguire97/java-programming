model ManchesterTriage

--classes
class Hospital
attributes
  name : String
  phone : Integer
  address : String
end

class Patient
attributes
  FirstName : String
  LastName : String
  id : String
  gender : Gender
  birthday : Integer
  obtain_patient_info: Boolean
  examined_airway: Boolean
  examined_breathing: Boolean
  checked_patient_for_shock: Boolean
  pain_measured: Boolean
  cardiac_pain_examined: Boolean
  breathing_rate_measured: Boolean
  pulse_checked: Boolean
  pleuritic_pain_examined: Boolean
  checked_for_persistent_vomiting: Boolean
  examine_patients_cardiac_history: Boolean
  pain_remeasured: Boolean
  vomiting_checked: Boolean
  mild_pain_examined: Boolean
  problems_checked: Boolean
  resuscitation_in_action: Boolean
  patient_stabilized: Boolean
  patient_supervised: Boolean
  patient_reassessed: Boolean
end

class TreatedPatient
attributes
  airwayCompromise: Boolean
  inadequateBreathing: Boolean
  shock: Boolean
  severePain: Boolean
  cardiacPain: Boolean
  acutelyShortBreath: Boolean
  pleuriticPain: Boolean
  persistentVomiting: Boolean
  SignificantCardiacHistory: Boolean
  moderatePain: Boolean
  vomiting: Boolean
  recentMildPain: Boolean
  recentProblem: Boolean
end

class Severity
attributes
  severity: severity
operations
  examineAirway(p: Patient)
  checkForAdequateBreathing(p: Patient)
  checkForShock(p: Patient)
  measurePain(p: Patient)
  examineCardiacPain(p: Patient)
  measureBreathingRate(p: Patient)
  checkPulse(p: Patient)
  examinePleuriticPain(p: Patient)
  checkForPersistentVomiting(p: Patient)
  examineForCardiacHistory(p: Patient)
  reMeasureForPain(p: Patient)
  checkVomiting(p: Patient)
  examineForMildPain(p: Patient)
  checkForProblems(p: Patient)
end

class Immediate
operations
  ResuscitationRequired(p: Patient)
  ContinuousObservation(p: Patient)
end

class VeryUrgent
operations
  Stabilize(p: Patient)
  Monitor(p: Patient)
end

class Urgent
operations
  Supervision(p: Patient)
end

class Standard
operations
  Reassess(p: Patient)
end

class NonStandard
operations
  CanWait(p: Patient)
  Reassess(p: Patient)
end

-- associations

composition ConsistOf between
  Hospital[1]
  Patient[1..*]
end

association patient between
  Patient[1]
  TreatedPatient[1]
end

association treatment between
  TreatedPatient[1]
  Severity[1]
end

association veryUrgent between
  Severity[1]
  VeryUrgent[1]
end

association immediate between
  Severity[1]
  Immediate[1]
end

association standard between
  Severity[1]
  Standard[1]
end

association urgent between
  Severity[1]
  Urgent[1]
end

association nonStandard between
  Severity[1]
  NonStandard[1]
end


--enumeration
enum severity {immediate, veryUrgent, urgent, standard, nonStandard}
enum Gender {Male, Female}

--constraints
constraints
context Severity :: examineAirway(p: Patient)
pre: p.obtain_patient_info = true
post: p.examined_airway=true

context Severity:: checkForAdequateBreathing(p: Patient)
pre: p.examined_airway=true
post: p.examined_breathing=true

context Severity:: checkForShock(p: Patient)
pre: p.examined_airway=true and p.examined_breathing=true
post: p.checked_patient_for_shock=true

context Severity:: measurePain(p: Patient)
pre: p.checked_patient_for_shock=true
post: p.pain_measured=true

context Severity:: examineCardiacPain(p: Patient)
pre: p.pain_measured=true
post: p.cardiac_pain_examined=true

context Severity:: measureBreathingRate(p: Patient)
pre: p.pain_measured=true and p.cardiac_pain_examined=true
post: p.breathing_rate_measured=true

context Severity:: checkPulse(p: Patient)
pre: p.pain_measured=true and p.cardiac_pain_examined and p.breathing_rate_measured=true
post: p.pulse_checked=true

context Severity:: examinePleuriticPain(p: Patient)
pre: p.pulse_checked=true
post: p.pleuritic_pain_examined=true

context Severity:: checkForPersistentVomiting(p: Patient)
pre: p.pleuritic_pain_examined=true
post: p.checked_for_persistent_vomiting=true

context Severity:: examineForCardiacHistory(p: Patient)
pre: p.pleuritic_pain_examined=true and p.checked_for_persistent_vomiting=true
post: p.examine_patients_cardiac_history=true

context Severity:: reMeasureForPain(p: Patient)
pre: p.pleuritic_pain_examined=true and p.checked_for_persistent_vomiting=true and p.examine_patients_cardiac_history=true
post: p.pain_remeasured=true

context Severity:: checkVomiting(p: Patient)
pre: p.pain_remeasured=true
post: p.vomiting_checked=true

context Severity:: examineForMildPain(p: Patient)
pre: p.vomiting_checked=true
post: p.mild_pain_examined=true

context Severity:: checkForProblems(p: Patient)
pre: p.vomiting_checked=true and p.mild_pain_examined=true
post: p.problems_checked=true

context Immediate:: ResuscitationRequired(p: Patient)
pre: p.examined_airway=true
pre: p.examined_breathing=true
pre: p.checked_patient_for_shock=true
post: p.resuscitation_in_action=true

context VeryUrgent:: Stabilize(p: Patient)
pre: p.pain_measured=true
pre: p.cardiac_pain_examined=true
pre: p.breathing_rate_measured=true
pre: p.pulse_checked=true
post: p.patient_stabilized=true

context Urgent:: Supervision(p: Patient)
pre: p.pleuritic_pain_examined=true
pre: p.checked_for_persistent_vomiting=true
pre: p.examine_patients_cardiac_history=true
pre: p.pain_remeasured=true
post: p.patient_supervised=true

context Standard:: Reassess(p: Patient)
pre: p.vomiting_checked=true
pre: p.mild_pain_examined=true
pre: p.problems_checked=true
post: p.patient_reassessed=true

context NonStandard:: Reassess(p: Patient)
pre: p.vomiting_checked=true
pre: p.mild_pain_examined=true
pre: p.problems_checked=true
post: p.patient_reassessed=true
